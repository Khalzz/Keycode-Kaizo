[gd_scene load_steps=42 format=3 uid="uid://btnlv2vwv2vd8"]

[ext_resource type="Script" path="res://Scripts/Label.gd" id="1_sd273"]
[ext_resource type="Texture2D" uid="uid://3qefdbbyleen" path="res://Assets/Sprites/Player/Movement/Falling.png" id="2_cm55h"]
[ext_resource type="Texture2D" uid="uid://cuwll41rglpcq" path="res://Assets/Sprites/Player/Movement/Crouching.png" id="2_v5p4i"]
[ext_resource type="Texture2D" uid="uid://dix0ofkxr1lej" path="res://Assets/Sprites/Player/Movement/DashAttack.png" id="2_wuv3j"]
[ext_resource type="Texture2D" uid="uid://v6v1owyp2qyf" path="res://Assets/Sprites/Player/Movement/BACK_AIR/BAIR.png" id="2_x704u"]
[ext_resource type="Texture2D" uid="uid://dow8a7724n4uq" path="res://Assets/Sprites/Player/Movement/IDLE/IDLE.png" id="3_mgd7a"]
[ext_resource type="Texture2D" uid="uid://q1o8uqcnl16m" path="res://Assets/Sprites/Player/Movement/IDLE/IDLE22.png" id="4_8hbs7"]
[ext_resource type="Texture2D" uid="uid://c7j0e5h81a6wk" path="res://Assets/Sprites/Player/Movement/DOWNTILT/DOWNTILT_0.png" id="4_774ou"]
[ext_resource type="Script" path="res://Scenes/Characters/PlayerAnimations.gd" id="4_dutyh"]
[ext_resource type="Texture2D" uid="uid://d000sv0nbdakc" path="res://Assets/Sprites/Player/Movement/Jumping.png" id="5_4dbwr"]
[ext_resource type="Texture2D" uid="uid://3v1c1o6n6a7r" path="res://Assets/Sprites/Player/Movement/DOWNTILT/DOWNTILT_1.png" id="5_8pvbk"]
[ext_resource type="Texture2D" uid="uid://c4726ei1q111o" path="res://Assets/Sprites/Player/Movement/Jab/Jab1.png" id="5_il76s"]
[ext_resource type="Texture2D" uid="uid://chbrc2fon54h4" path="res://Assets/Sprites/Player/Movement/DOWN_AIR/DOWNAIR_0.png" id="6_cnuow"]
[ext_resource type="Texture2D" uid="uid://cc87vafrml6w4" path="res://Assets/Sprites/Player/Movement/Jab/Jab2.png" id="6_rlmha"]
[ext_resource type="Texture2D" uid="uid://c3110wr7ydcao" path="res://Assets/Sprites/Player/Movement/Running.png" id="6_sjkpu"]
[ext_resource type="Texture2D" uid="uid://b4w5hydskwaas" path="res://Assets/Sprites/Player/Movement/DOWN_AIR/DOWNAIR_1.png" id="7_gyuxq"]
[ext_resource type="Texture2D" uid="uid://dlx0amep8qxhj" path="res://Assets/Sprites/Player/Movement/Walking.png" id="7_o8jvi"]
[ext_resource type="Texture2D" uid="uid://d30xlq6iwultj" path="res://Assets/Sprites/Player/Movement/NeutralAir.png" id="9_8r8in"]
[ext_resource type="Texture2D" uid="uid://b1gyegw4ohybh" path="res://Assets/Sprites/Player/Movement/FORWARD_AIR/FAIR.png" id="9_fn7um"]
[ext_resource type="PackedScene" uid="uid://b6b0y5nbglke3" path="res://Scenes/Characters/hitboxes/Test/jab_hitbox.tscn" id="13_gc2vs"]
[ext_resource type="PackedScene" uid="uid://cqvv4kuglti0i" path="res://Scenes/Characters/hitboxes/Test/dash_attack_hitbox.tscn" id="14_h4xt5"]
[ext_resource type="Texture2D" uid="uid://d08rkvhsedokx" path="res://Assets/Sprites/Player/Movement/UPTILT/UPTILT_0.png" id="14_wusew"]
[ext_resource type="PackedScene" uid="uid://brbtkvbimiilt" path="res://Scenes/Characters/hitboxes/Test/nair_hitbox.tscn" id="15_ia7bt"]
[ext_resource type="Texture2D" uid="uid://dv5b3a4relhat" path="res://Assets/Sprites/Player/Movement/UPTILT/UPTILT_1.png" id="15_mtytx"]
[ext_resource type="Texture2D" uid="uid://5m8y7jvy01si" path="res://Assets/Sprites/Player/Movement/SIDETILT/SIDETILT.png" id="16_ck5a3"]
[ext_resource type="Texture2D" uid="uid://b75inxtanm7e" path="res://Assets/Sprites/Player/Movement/UP_AIR/UPAIR_0.png" id="17_hvxxv"]
[ext_resource type="Texture2D" uid="uid://dcnh26howumxp" path="res://Assets/Sprites/Player/Movement/UP_AIR/UPAIR_1.png" id="18_qhx3i"]
[ext_resource type="PackedScene" uid="uid://ujncgrjaa1a1" path="res://Scenes/Characters/hitboxes/Test/down_tilt_hitbox.tscn" id="19_enisu"]
[ext_resource type="PackedScene" uid="uid://djt7i54iyr3g6" path="res://Scenes/Characters/hitboxes/Test/uptilt_hitbox.tscn" id="22_vcq5u"]
[ext_resource type="PackedScene" uid="uid://bx768iceq72re" path="res://Scenes/Characters/hitboxes/Test/downair_hitbhox.tscn" id="25_p0biw"]
[ext_resource type="PackedScene" uid="uid://boglq21xh1aex" path="res://Scenes/Characters/hitboxes/Test/sidetilt_hitbox.tscn" id="27_ffsd5"]
[ext_resource type="PackedScene" uid="uid://w2ediwfail4o" path="res://Scenes/Characters/hitboxes/Test/upair_hitbox.tscn" id="30_v0kk2"]
[ext_resource type="PackedScene" uid="uid://crur1am2e0fkd" path="res://Scenes/Characters/hitboxes/Test/back_air_hitbox.tscn" id="33_ylel6"]
[ext_resource type="PackedScene" uid="uid://u8yai1ebbfid" path="res://Scenes/Characters/hitboxes/Test/forward_air_hitbox.tscn" id="34_kvrdy"]
[ext_resource type="Script" path="res://Scenes/Characters/AnimationPlayer.gd" id="35_na8g4"]
[ext_resource type="Texture2D" uid="uid://bav8kp4pkw2d2" path="res://Assets/Sprites/Player/Movement/IDLE/IDLE_SPRITESHEET.png" id="36_v0a70"]

[sub_resource type="GDScript" id="GDScript_yv2bm"]
script/source = "extends CharacterBody2D

# Other data
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\") * 3
enum States {IDLE, WALKING, RUNNING, JUMPING, FALLING, JAB, DASH_ATTACK, NEUTRAL_AIR, CROUCHING, DOWNTILT, UPTILT, SIDETILT, DOWN_AIR, UP_AIR, FORWARD_AIR, BACK_AIR}
var state = States.IDLE

# Movement
var direction
var tilt

const SPEED = 800.0
var acceleration = 2000
var max_speed = 600.0
var last_direction = 1
var jump_direction = 0

# Jumping
const JUMP_VELOCITY = -700.0
var MAX_JUMP_TIME = 0.2
var is_jumping = false
var jump_timer = 0

# Dash Attack values
var dash_timer = 0.2
var dash_distance = 1000.0

# Attacks with timer
var isActive = true
var isWalking = false
var jumpCount = 2
var canJumpEsp = false

# Tilt attacks
var canTilt = true

func _physics_process(delta):
	inputMovement() # here i get the values of direction
	touchingFloor(delta) # this function i will use it if the user is touching the floor or not
	stateReseters() # reseters of data

	if isActive:
		jumpLogic(delta)
		movementLogic(delta)
		crouchLogic()
		floorAttacks()
		airAttacks()
	else:
		activeReset(delta)
	move_and_slide()

func inputMovement():
	if !isWalking:
		direction = Input.get_vector(\"left\", \"right\", \"down\", \"up\")
	else:
		direction = Input.get_vector(\"left\", \"right\", \"down\", \"up\") / 2.1
	tilt = Input.get_vector(\"left_tilt\", \"right_tilt\", \"down_tilt\", \"up_tilt\")

func crouchLogic():
	if direction.y < -0.8 and direction.x < 0.2 and direction.x > -0.2 and is_on_floor():
		state = States.CROUCHING
		velocity.x = 0

func touchingFloor(delta):
	if is_on_floor():
		jump_direction = last_direction
		jumpCount = 2
	else:
		if state == States.WALKING or state == States.RUNNING or state == States.IDLE:
			state = States.FALLING
		velocity.y += gravity * delta
		if direction.y < -0.8:
			velocity.y = -JUMP_VELOCITY * 2

func activeReset(delta):
	dash_timer += delta
	if state == States.DASH_ATTACK:
		resetDashAttack(dash_timer)
	elif state == States.NEUTRAL_AIR:
		resetNeutralAir(dash_timer)
	elif state == States.DOWN_AIR:
		resetDownAir(dash_timer)
	elif state == States.SIDETILT:
		resetSideTilt(dash_timer)
	elif state == States.UP_AIR:
		resetUpAir(dash_timer)
	elif state == States.UPTILT:
		resetUpTilt(dash_timer)
	elif state == States.FORWARD_AIR:
		resetForwardAir(dash_timer)
	elif state == States.BACK_AIR:
		resetBackAir(dash_timer)

func resetDashAttack(dash_timer):
	if dash_timer >= 0.1:
		state = States.IDLE
		isWalking = true
		isActive = true
		
func resetNeutralAir(dash_timer):
	if dash_timer >= 0.3 or is_on_floor():
		state = States.FALLING
		isWalking = true
		isActive = true

func resetDownAir(dash_timer):
	if dash_timer >= 0.4 or is_on_floor():
		state = States.FALLING
		isWalking = true
		isActive = true

func resetSideTilt(dash_timer):
	if dash_timer >= 0.2:
		state = States.IDLE
		isWalking = true
		isActive = true

func resetUpAir(dash_timer):
	if dash_timer >= 0.2 or is_on_floor():
		state = States.FALLING
		isWalking = true
		isActive = true
		
func resetForwardAir(dash_timer):
	if dash_timer >= 0.2 or is_on_floor():
		state = States.FALLING
		isWalking = true
		isActive = true

func resetBackAir(dash_timer):
	if dash_timer >= 0.2 or is_on_floor():
		state = States.FALLING
		isWalking = true
		isActive = true

func resetUpTilt(dash_timer):
	if dash_timer >= 0.2:
		state = States.IDLE
		isWalking = true
		isActive = true

func stateReseters():
	if (tilt.x > -0.8 and tilt.x < 0.8):
		canTilt = true

	if !Input.is_action_pressed(\"jump\"):
		canJumpEsp = true

	if isWalking and direction.x == 0:
			isWalking = false

func jumpLogic(delta):
	if is_jumping:
		jump_timer += delta
		if Input.is_action_pressed(\"jump\") and jump_timer < MAX_JUMP_TIME:
			state = States.JUMPING
			velocity.y = JUMP_VELOCITY
		else:
			state = States.FALLING
			is_jumping = false
			jump_timer = 0

	if Input.is_action_pressed(\"jump\") and is_on_floor() or (Input.is_action_pressed(\"jump\") and state == States.FALLING and jumpCount > 0 and canJumpEsp):
		jump_direction = last_direction
		jumpCount -= 1
		canJumpEsp = false
		is_jumping = true
		jump_timer = 0

func movementLogic(delta):
	if direction.x != 0 and state != States.DASH_ATTACK:
		last_direction = direction.x
		if is_on_floor():
			if (direction.x >= 0.5 or direction.x <= -0.5):
				state = States.RUNNING
			else:
				state = States.WALKING
			velocity.x = move_toward(velocity.x, direction.x * max_speed, (acceleration * delta) * 10)
		else:
			velocity.x = move_toward(velocity.x, direction.x * max_speed, (acceleration * delta) * 5)
	elif direction.x == 0 and state != States.JUMPING and is_on_floor():
			state = States.IDLE
			velocity.x = move_toward(velocity.x, 0, 100)

func floorAttacks():
	if state == States.IDLE or state == States.WALKING or state == States.CROUCHING:
		if state == States.IDLE: 
			if Input.is_action_pressed(\"basic_attack\") and state != States.CROUCHING:
				state = States.JAB
		if (direction.x >= 0.2 or direction.x <= -0.2):
			if Input.is_action_just_pressed(\"basic_attack\"):
				sideTiltAttack()

		if (state == States.WALKING or state == States.IDLE or state == States.CROUCHING) and (tilt.x < -0.8 or tilt.x > 0.8) and canTilt:
			if state == States.IDLE:
				last_direction = tilt.x
			sideTiltAttack()

		if (state == States.CROUCHING and Input.is_action_just_pressed(\"basic_attack\")) or is_on_floor() and tilt.y < -0.8:
			velocity.x = 0
			state = States.DOWNTILT

		if ((direction.y > 0.5 and Input.is_action_just_pressed(\"basic_attack\")) or is_on_floor() and tilt.y > 0.8):
			isActive = false
			state = States.UPTILT
			dash_timer = 0.0
	elif state == States.RUNNING and (Input.is_action_just_pressed(\"basic_attack\") or (tilt.x < -0.8 or tilt.x > 0.8)):
		dashAttack()

func airAttacks():
	if state == States.FALLING:
		if Input.is_action_pressed(\"basic_attack\") and direction.y > -0.1 and direction.y < 0.1 and direction.x == 0:
			isActive = false
			state = States.NEUTRAL_AIR
			dash_timer = 0.0

		if (direction.y < -0.1 and Input.is_action_pressed(\"basic_attack\")) or tilt.y < -0.8:
			isActive = false
			state = States.DOWN_AIR
			dash_timer = 0.0
		
		if (direction.y > 0.1 and Input.is_action_just_pressed(\"basic_attack\")) or tilt.y > 0.8:
			isActive = false
			state = States.UP_AIR
			dash_timer = 0.0
		
		isForwardAir()
		isBackAir()


func isForwardAir():
	if jump_direction > 0 and ((direction.x > 0.1 and Input.is_action_just_pressed(\"basic_attack\")) or tilt.x > 0.5):
		isActive = false
		state = States.FORWARD_AIR
		dash_timer = 0.0
	if jump_direction < 0 and ((direction.x < -0.1 and Input.is_action_just_pressed(\"basic_attack\")) or tilt.x < -0.5):
		isActive = false
		state = States.FORWARD_AIR
		dash_timer = 0.0
		
func isBackAir():
	if jump_direction > 0 and ((direction.x < -0.1 and Input.is_action_just_pressed(\"basic_attack\")) or tilt.x < -0.5):
		isActive = false
		state = States.BACK_AIR
		dash_timer = 0.0
	if jump_direction < 0 and ((direction.x > 0.1 and Input.is_action_just_pressed(\"basic_attack\")) or tilt.x > 0.5):
		isActive = false
		state = States.BACK_AIR
		dash_timer = 0.0
		

func sideTiltAttack():
	state = States.SIDETILT
	isActive = false
	dash_timer = 0.0
	isWalking = false
	velocity.x = 0
	velocity.x = 100 * last_direction
	canTilt = false

func upTiltAttack():
	state = States.UPTILT
	isActive = false
	dash_timer = 0.0
	isWalking = false
	velocity.x = 0
	velocity.x = 100 * last_direction
	canTilt = false

func dashAttack():
	isActive = false
	state = States.DASH_ATTACK
	dash_timer = 0.0
	velocity.x = dash_distance * last_direction
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_u2po8"]
height = 77.0

[sub_resource type="SpriteFrames" id="SpriteFrames_wkp1g"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_x704u")
}],
"loop": true,
"name": &"BAIR",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_v5p4i")
}],
"loop": true,
"name": &"CROUCHING",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_wuv3j")
}],
"loop": true,
"name": &"DASH_ATTACK",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("4_774ou")
}, {
"duration": 1.0,
"texture": ExtResource("5_8pvbk")
}],
"loop": true,
"name": &"DOWNTILT",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_cnuow")
}, {
"duration": 1.0,
"texture": ExtResource("7_gyuxq")
}],
"loop": true,
"name": &"DOWN_AIR",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("9_fn7um")
}],
"loop": true,
"name": &"FAIR",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_cm55h")
}],
"loop": true,
"name": &"FALLING",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("3_mgd7a")
}, {
"duration": 1.0,
"texture": ExtResource("4_8hbs7")
}],
"loop": true,
"name": &"IDLE",
"speed": 1.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_il76s")
}, {
"duration": 1.0,
"texture": ExtResource("6_rlmha")
}],
"loop": true,
"name": &"JAB",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_4dbwr")
}],
"loop": true,
"name": &"JUMPING",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("9_8r8in")
}],
"loop": true,
"name": &"NEUTRAL_AIR",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_sjkpu")
}],
"loop": true,
"name": &"RUNNING",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("16_ck5a3")
}],
"loop": true,
"name": &"SIDETILT",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("17_hvxxv")
}, {
"duration": 1.0,
"texture": ExtResource("18_qhx3i")
}],
"loop": true,
"name": &"UPAIR",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("14_wusew")
}, {
"duration": 1.0,
"texture": ExtResource("15_mtytx")
}],
"loop": true,
"name": &"UPTILT",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("7_o8jvi")
}],
"loop": true,
"name": &"WALKING",
"speed": 5.0
}]

[sub_resource type="Animation" id="Animation_t2o3i"]
resource_name = "IDLE"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_2gus0"]
_data = {
"IDLE": SubResource("Animation_t2o3i")
}

[node name="Player" type="CharacterBody2D"]
collision_layer = 2
collision_mask = 5
floor_snap_length = 0.0
script = SubResource("GDScript_yv2bm")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 4.5)
shape = SubResource("CapsuleShape2D_u2po8")
debug_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="Label" type="Label" parent="."]
offset_left = -47.0
offset_top = -71.0
offset_right = 47.0
offset_bottom = -45.0
text = "Jumping"
horizontal_alignment = 1
script = ExtResource("1_sd273")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, 3)
scale = Vector2(0.235, 0.235)
sprite_frames = SubResource("SpriteFrames_wkp1g")
animation = &"IDLE"
frame_progress = 0.197278
script = ExtResource("4_dutyh")

[node name="JAB_HITBOX" parent="." instance=ExtResource("13_gc2vs")]
visible = false
position = Vector2(0, -8)
collision_layer = 1
collision_mask = 3

[node name="DASH_ATTACK_HITBOX" parent="." instance=ExtResource("14_h4xt5")]
visible = false
collision_mask = 3

[node name="NAIR_HITBOX" parent="." instance=ExtResource("15_ia7bt")]
visible = false

[node name="DOWN_TILT_HITBOX" parent="." instance=ExtResource("19_enisu")]
visible = false

[node name="UPTILT_HITBOX" parent="." instance=ExtResource("22_vcq5u")]
visible = false
collision_mask = 3

[node name="DOWNAIR_HITBHOX" parent="." instance=ExtResource("25_p0biw")]
visible = false
collision_mask = 3

[node name="SIDETILT_HITBOX" parent="." instance=ExtResource("27_ffsd5")]
visible = false
collision_mask = 3

[node name="UPAIR_HITBOX" parent="." instance=ExtResource("30_v0kk2")]
visible = false
collision_mask = 3

[node name="BACK_AIR_HITBOX" parent="." instance=ExtResource("33_ylel6")]
visible = false
collision_mask = 3

[node name="FORWARD_AIR_HITBOX" parent="." instance=ExtResource("34_kvrdy")]
visible = false
collision_mask = 3

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_2gus0")
}
script = ExtResource("35_na8g4")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(0, 3)
scale = Vector2(0.235, 0.235)
texture = ExtResource("36_v0a70")
hframes = 2
